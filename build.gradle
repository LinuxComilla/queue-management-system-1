//import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    ext {
        springBootVersion = '1.1.5.RELEASE'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/milestone" }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'org.flywaydb:flyway-gradle-plugin:3.0'
    }
}

//sourceCompatibility = 1.7
version = '1.0'

ext {
    ext.groovyVersion        = "2.3.4"
    ext.jodaVersion          = "2.3"
    ext.junitVersion         = "4.11"
    ext.guavaVersion         = "17.0"
    ext.restassuredVersion   = "2.3.2"
    ext.jsonpathVersion      = "0.9.1"


    // Browser test automation
    drivers = ["chrome"]
    ext.gebVersion = '0.9.3'
    ext.seleniumVersion = '2.42.2'
    ext.chromeDriverVersion = '2.10'
    ext.phantomJsVersion = '1.9.7'
}


apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'spring-boot'
//apply from: "gradle/osSpecificDownloads.gradle"



repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/milestone" }
    jcenter()
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    compile "com.google.guava:guava:${guavaVersion}"
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.data:spring-data-commons:1.8.1.RELEASE"
    compile "org.springframework.data:spring-data-mongodb:1.5.1.RELEASE"

    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
    testCompile "org.spockframework:spock-spring:0.7-groovy-2.0"
    testCompile "com.jayway.jsonpath:json-path-assert:${jsonpathVersion}"
    testCompile "junit:junit:${junitVersion}"

//    testCompile "info.cukes:cucumber-junit:1.1.8"
//    testCompile "info.cukes:cucumber-groovy:1.1.8"
//    testCompile "info.cukes:cucumber-java:1.1.8"

    testCompile "org.gebish:geb-spock:$gebVersion"
    testCompile "org.gebish:geb-junit4:$gebVersion"
    // Drivers
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"

}


//drivers.each { driver ->
//    task "${driver}Test"(type: Test) {
//        reports {
//            html.destination = reporting.file("$name/tests")
//            junitXml.destination = file("$buildDir/test-results/$name")
//        }
//
//        outputs.upToDateWhen { false }  // Always run tests
//
//        systemProperty "geb.build.reportsDir", reporting.file("$name/geb")
//        systemProperty "geb.env", driver
//
//        // If you wanted to set the baseUrl in your buildâ€¦
//        // systemProperty "geb.build.baseUrl", "http://myapp.com"
//    }
//}
//
//chromeTest {
//    dependsOn unzipChromeDriver
//
//    def chromedriverFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "chromedriver.exe" : "chromedriver"
//    systemProperty "webdriver.chrome.driver", new File(unzipChromeDriver.outputs.files.singleFile, chromedriverFilename).absolutePath
//}
//
//test {
//    dependsOn drivers.collect { tasks["${it}Test"] }
//    enabled = false
//}


task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}